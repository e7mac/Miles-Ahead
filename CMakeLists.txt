PROJECT(milesahead)
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(GLUT REQUIRED)
FIND_LIBRARY(FLUIDSYNTH_LIBRARY fluidsynth REQUIRED)

SET(milesahead_LIBS ${milesahead_LIBS}
  ${OPENGL_LIBRARIES}
  ${GLUT_LIBRARIES}
  ${FLUIDSYNTH_LIBRARY}
)

IF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
  FIND_PACKAGE(PulseAudio)
  IF(PULSEAUDIO_FOUND)
    ADD_DEFINITIONS(-D__LINUX_PULSE__)
    SET(milesahead_LIBS ${milesahead_LIBS} ${PULSEAUDIO_LIBRARY} pulse-simple)
  ENDIF(PULSEAUDIO_FOUND)
  FIND_PACKAGE(ALSA REQUIRED)
    IF(ALSA_FOUND)
  #  ADD_DEFINITIONS(-D__LINUX_ALSA__)
    ADD_DEFINITIONS(-D__LINUX_ALSASEQ__)
    INCLUDE_DIRECTORIES(${ALSA_INCLUDE_DIRS})
    SET(milesahead_LIBS ${milesahead_LIBS} ${ALSA_LIBRARY})
  ENDIF(ALSA_FOUND)
  ADD_DEFINITIONS(-D__OS_LINUX__)
  ADD_DEFINITIONS(-D__STK_REALTIME__)
  ADD_DEFINITIONS(-D__UNIX_JACK__)
  SET(milesahead_LIBS ${milesahead_LIBS} pthread jack stdc++ m)
ENDIF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")

IF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
  ADD_DEFINITIONS(-D__MACOSX_CORE__)
  ADD_DEFINITIONS(-D__OS_MACOSX__)
  FIND_LIBRARY(COREAUDIO_LIBRARY CoreAudio)
  FIND_LIBRARY(COREMIDI_LIBRARY CoreMIDI)
  FIND_LIBRARY(COREFOUNDATION_LIBRARY CoreFoundation)
  FIND_LIBRARY(IOKIT_LIBRARY IOKit)
  FIND_LIBRARY(CARBON_LIBRARY Carbon)
  FIND_LIBRARY(FOUNDATION_LIBRARY Foundation)
  FIND_LIBRARY(APPKIT_LIBRARY Appkit)

  SET(milesahead_LIBS ${milesahead_LIBS}
    ${COREAUDIO_LIBRARY} ${COREMIDI_LIBRARY}
    ${COREFOUNDATION_LIBRARY} ${IOKIT_LIBRARY}
    ${CARBON_LIBRARY} ${FOUNDATION_LIBRARY}
    ${APPKIT_LIBRARY}
  )
ENDIF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")

IF(${CMAKE_SYSTEM_NAME} MATCHES "IRIX")
  ADD_DEFINITIONS(-D__OS_IRIX__)
ENDIF(${CMAKE_SYSTEM_NAME} MATCHES "IRIX")

IF(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
  ADD_DEFINITIONS(-D__OS_WINDOWS__)
ENDIF(${CMAKE_SYSTEM_NAME} MATCHES "Windows")

SET(milesagead_SRCS
  ${CMAKE_SOURCE_DIR}/src/gfx.cpp
  src/MidiEvent.cpp
  src/MidiFileIn.cpp
  src/RtMidi.cpp
  src/Thread.cpp
  src/main.cpp
  src/MidiEventQ.cpp
  src/RtAudio.cpp
  src/Stk.cpp
)

ADD_EXECUTABLE(milesahead ${milesagead_SRCS})
TARGET_LINK_LIBRARIES(milesahead ${milesahead_LIBS})



